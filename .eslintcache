[{"/home/beardificent/becode/portfolio-react/src/index.js":"1","/home/beardificent/becode/portfolio-react/src/App.js":"2","/home/beardificent/becode/portfolio-react/src/reportWebVitals.js":"3","/home/beardificent/becode/portfolio-react/src/components/About.js":"4","/home/beardificent/becode/portfolio-react/src/components/Home.js":"5","/home/beardificent/becode/portfolio-react/src/components/SinglePost.js":"6","/home/beardificent/becode/portfolio-react/src/components/Post.js":"7","/home/beardificent/becode/portfolio-react/src/components/Project.js":"8","/home/beardificent/becode/portfolio-react/src/components/NavBar.js":"9","/home/beardificent/becode/portfolio-react/src/client.js":"10"},{"size":500,"mtime":1607677613984,"results":"11","hashOfConfig":"12"},{"size":747,"mtime":1607596745708,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1607456007196,"results":"14","hashOfConfig":"12"},{"size":2029,"mtime":1607615036558,"results":"15","hashOfConfig":"12"},{"size":1166,"mtime":1607680161507,"results":"16","hashOfConfig":"12"},{"size":2758,"mtime":1607679325917,"results":"17","hashOfConfig":"12"},{"size":2523,"mtime":1607679325897,"results":"18","hashOfConfig":"12"},{"size":3144,"mtime":1607679688000,"results":"19","hashOfConfig":"12"},{"size":2506,"mtime":1607675831634,"results":"20","hashOfConfig":"12"},{"size":147,"mtime":1607590201131,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xbvlb3",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/beardificent/becode/portfolio-react/src/index.js",[],"/home/beardificent/becode/portfolio-react/src/App.js",[],["44","45"],"/home/beardificent/becode/portfolio-react/src/reportWebVitals.js",[],"/home/beardificent/becode/portfolio-react/src/components/About.js",[],"/home/beardificent/becode/portfolio-react/src/components/Home.js",[],"/home/beardificent/becode/portfolio-react/src/components/SinglePost.js",[],"/home/beardificent/becode/portfolio-react/src/components/Post.js",["46"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport sanityClient from \"../client\";\n\nexport default function Post() {\n  //using groq to link postData to our Sanity posts. will review if this is accurate\n  const [postData, setPost] = useState(null);\n\n  useEffect(() => {\n    sanityClient\n      .fetch(\n        //select all types that are equal to post and gather title, slug, mainImage,...\n        `*[_type == \"post\"]{\n          title,\n          slug,\n          mainImage{\n          asset->{\n          _id,\n          url}, alt\n          }\n          }`\n      )\n      .then((data) => setPost(data))\n      .catch(console.error);\n  }, []);\n  return (\n    <main\n      className=\"spiderman-bg absolute w-full\" /*className = \"bg-green-100 min-h-screen\"*/>\n      {/*\n          commented because we're taking the bg from thirdparty in custom css\n      <img\n        src={imageFive}\n        alt=\"spiderman\"\n        className=\"absolute topZero object-cover w-full h-full\"\n      />\n      */}\n      <section className=\"my-28 container mx-auto\">\n        <h1 className=\"text-5xl flex justify-center cursive\">Findings</h1>\n        <h2 className=\"text-lg text-gray-600 flex justify-center mb-12\">\n          {/*Room for a subtitle*/}\n        </h2>\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {postData &&\n            postData.map((post, index) => (\n              <article className=\"relative rounded-lg shadow-xl bg-transparent p-8\">\n                <Link to={\"/post/\" + post.slug.current} key={post.slug.current}>\n                  <span\n                    className=\"block h-64 relative rounded shadow leading-snug bg-white border-l-8 border-white-400 hover:shadow-2xl\"\n                    key={index}\n                  >\n                    <img\n                      src={post.mainImage.asset.url}\n                      alt={post.mainImage.alt}\n                      className={\n                        \"w-full h-full rounded-r object-cover absolute\"\n                      }\n                    />\n                    <span className=\"block relative h-full flex justify-end items-end pr-4 pb-4\">\n                      <h3 className=\"text-gray-800 text-lg font-blog px-3 py-4 bg-red-700 text-red-100 bg-opacity-75 rounded\">\n                        {post.title}\n                      </h3>\n                    </span>\n                  </span>\n                </Link>\n              </article>\n            ))}\n        </div>\n      </section>\n    </main>\n  );\n}\n","/home/beardificent/becode/portfolio-react/src/components/Project.js",[],"/home/beardificent/becode/portfolio-react/src/components/NavBar.js",[],"/home/beardificent/becode/portfolio-react/src/client.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":4,"column":1,"nodeType":"53","messageId":"54","endLine":4,"endColumn":67},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]